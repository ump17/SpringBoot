1. @Controller is used to declare common web controllers which can return HTTP response but @RestController is used to
 create controllers for REST APIs which can return JSON. In Spring MVC, both @Controller and @RestController annotations
 are used to define web controllers as per MVC Design pattern.
 @RestController = @Controller + @ResponseBody

2.The @ResponseBody annotation tells a controller that the object returned is automatically serialized into JSON 
  and passed back into the HttpResponse object. 

3.@Component is a generic stereotype for any Spring-managed component.
  @Service annotates classes at the service layer.
  @Repository annotates classes at the persistence layer, which will act as a database repository.

4.If you want to represent any object as a string, toString() method comes into existence.

5. Java static block - Is used to initialize the static data member.
		       It is executed before the main method at the time of classloading.
   for more - https://www.javatpoint.com/static-keyword-in-java

6.Spring @Configuration annotation is part of the spring core framework. Spring Configuration annotation indicates that the 
  class has @Bean definition methods. So Spring container can process the class and generate Spring Beans to be used in the
  application.

7.Spring Securityâ€™s InMemoryUserDetailsManager implements UserDetailsService to provide support for
  username/password based authentication that is stored in memory.

8.SecurityContext context = SecurityContextHolder.getContext();
	Authentication authentication = context.getAuthentication();
	String username = authentication.getName();
 // read about - InMemoryUserDetailsManager also in spring security